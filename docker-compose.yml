services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=${QDRANT_HOST}
    depends_on:
      - db
      - redis
      - qdrant
    command: python manage.py runserver 0.0.0.0:8000
    stdin_open: true
    tty: true
    
  qdrant:
    image: qdrant/qdrant:v1.8.2
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.5"

  db:
    image: pgvector/pgvector:pg16
    command: postgres -c shared_preload_libraries='vector' -c listen_addresses='*' -c port=5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=http://qdrant:6333
    depends_on:
      - db
      - redis
      - qdrant

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
